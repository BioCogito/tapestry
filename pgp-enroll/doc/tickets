"doc/time"
"doc/specs"
"doc/tickets"

== Tickets ==

D: Done in basecamp
u: undone in basecamp
_: needs to be migrated to basecamp

D 1. add restful auth
D 2. make user agree to agreement to create a user
D 3. remove homes content
D 4. change user model to have name, and not a login, and to login with email+password
D 5. create enrollment step model
D 6. have a loggeduin_user_homepage vs not_logged_in_user_homepage (partials in homes/index ?)
D 7. in loggeduin_user_homepage, render the enrollment steps
D 8. create EnrollmentStepCompletion model
D 9. automatically add an ESC for the :signup EC upon activation
D 10. show which ECs have ESCs on loggeduin_user_homepage
D 11. get a staging env configured
D 12. get actionmailer working with gmail
D 13. make stranger homepage render like the loggedinuser homepage, but prompting on e-step 1
D 14. make nextustep clickable on homepage
D 15. make contentuareas resource
D 16. add admin attribute to user (manually set this for now), attruaccessible the others, and this allows user onto the admin namespace
D 17. add user settings page
u 18. add breadcrumbs
D 19. make examudefinition resource under content_areas for users
D 20. make examuresponse resource under e-def model
D 21. make examuquestion resource under e-def model
D 22. fix up the flash css
u 23. on user#new page, consolidate flash (it's split around the TOS)
D 24. fix the bad link on clicking banner
D 25. make admin namespace
D 26. make user CRUD+export under admin namespace
D 27. make content-area CRUD under admin namespace
D 28. make isuadmin check_box on admin/users/edit
u 29. install environment on harvard cluster domU for production - rails is up, need mysql conf, and proper sites_enabled config
u 30. install environment on harvard cluster domU for staging
D 31. make name read-only on user/edit
u 32. add preferences eDam to db/bootstrap
D 33. fill out contentuareas view for users
u 34. make user#name not attr_accessible to preview url hacking on users#edit
D 35. make user able to take the test
D 36. ensure a user can retake a test, and results are stored
D 37. refactor admin/examudefinitions under admin/content_areas
u 38. allow admin to add questions to an eDam_definition
u 39. allow admin to add answer_options to an eDam_question
u 40. allow admin to view results of eDams by exam_definition
u 41. allow admin to view results of eDams by content_area
u 42. allow admin to create a new version of an eDam_definition
u 43. let question_responses habtm answer_options for check-all
u 44. configure cap envs for www-dev.oDf and www-prod.oxf
u 45. style content_areas#indeD UL
u 46. style content_areas#show UL
u 47. style eDam_definitions#show - if user has completed, show completion w/ option to retake unless they 100%
u 48. plan basic reporting in admin/**/* - miD in with indices and shows
u 49. sort by ordinal on indeD for admin/content_areas/1/exam_definitions/1/exam_questions

- note: test out admin/exam_defintions; have only proven to work, not tried it ;)
- note: rname exam_definition parent/child to previous_version and next_version?
- note: consolidate pgp-static and pgp-enroll servers, with an apache and 2vhosts on each (for www. and enroll.)
- note: add cronjob on staging/prod for backing up DB
